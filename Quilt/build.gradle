plugins {
	id 'org.quiltmc.loom' version '0.12.+'
	id 'maven-publish'
}

repositories {

	maven {
		name 'Quilt (Release)'
		url 'https://maven.quiltmc.org/repository/release/'
	}

	maven {
		name 'Quilt (Snapshot)'
		url 'https://maven.quiltmc.org/repository/snapshot/'
		content {
			includeGroup 'org.quiltmc.fabric_api_qsl'
			includeGroupByRegex 'org\\.quiltmc\\.qsl(?:\\.[a-z_]+)?'
		}
	}
}

loom {
	remapArchives = false
	setupRemappedVariants = false
	enableTransitiveAccessWideners = false
	runConfigs.configureEach {
		ideConfigGenerated = false
	}
	interfaceInjection {
		enableDependencyInterfaceInjection = false
	}
}

jar {
	classifier null
	getDestinationDirectory().set(new File(project.getBuildDir(),"libs"))
}

remapJar.enabled = false
remapSourcesJar.enabled = false

dependencies {

	minecraft "com.mojang:minecraft:${minecraft_version}"
	mappings loom.layered() {
		officialMojangMappings()
		parchment("org.parchmentmc.data:parchment-${minecraft_version}:${parchment_version}@zip")
	}
	modImplementation "org.quiltmc:quilt-loader:${quilt_loader_version}"

	modImplementation("org.quiltmc:qsl:${quilt_stdlib_version}") {
		exclude group: "net.fabricmc"
	}

	implementation project(":Common")
	implementation project(":Api")

	compileOnly group:'com.google.auto.service', name:'auto-service', version:'1.0.1'
	testCompileOnly group:'com.google.auto.service', name:'auto-service', version:'1.0.1'
	annotationProcessor group:'com.google.auto.service', name:'auto-service', version:'1.0.1'

	testAnnotationProcessor sourceSets.main.output
}

loom {
	runs {
	}
}

processResources {
	from project(":Common").sourceSets.main.resources
	from project(":Api").sourceSets.main.resources
	inputs.property "version", project.version
}

tasks.withType(JavaCompile) {
	source(project(":Common").sourceSets.main.allSource)
	source(project(":Api").sourceSets.main.allSource)
}

compileTestJava {
	source(project(":Common").sourceSets.test.allSource)
	source(project(":Api").sourceSets.test.allSource)
}

processTestResources {
	from project(":Common").sourceSets.test.resources
	from project(":Api").sourceSets.test.resources
}
