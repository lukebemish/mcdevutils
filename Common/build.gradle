plugins {
    id 'org.quiltmc.loom' version '0.12.+'
    id 'maven-publish'
}

archivesBaseName = "${project_id}_common_${minecraft_version}"

repositories {
    maven {
        name = 'Forge / Mixin'
        url = 'https://maven.minecraftforge.net'
    }
}

loom {
    remapArchives = false
    setupRemappedVariants = false
    enableTransitiveAccessWideners = false
    runConfigs.configureEach {
        ideConfigGenerated = false
    }
    interfaceInjection {
        enableDependencyInterfaceInjection = false
    }
}

remapJar.enabled = false
remapSourcesJar.enabled = false

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${parchment_minecraft_version}:${parchment_version}@zip")
    }
    //DO NOT USE IN PROJECT
    //Provides necessary stuff for project to compile
    modCompileOnly("org.quiltmc:quilt-loader:${quilt_loader_version}")
    implementation project(":Api")

    compileOnly group:'com.google.auto.service', name:'auto-service', version:'1.0.1'
    testCompileOnly group:'com.google.auto.service', name:'auto-service', version:'1.0.1'
    annotationProcessor group:'com.google.auto.service', name:'auto-service', version:'1.0.1'
}

processResources {
    from project(":Api").sourceSets.main.resources
    def buildProps = project.properties.clone()

    filesMatching(['pack.mcmeta']) {

        expand buildProps
    }
}

tasks.withType(JavaCompile) {
    source(project(":Api").sourceSets.main.allSource)
}